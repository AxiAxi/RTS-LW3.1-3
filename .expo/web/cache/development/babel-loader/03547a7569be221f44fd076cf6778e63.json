{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Aspire\\\\projects\\\\studyAll\\\\RTS\\\\3\\\\AwesomeProject\\\\App.js\";\nimport React, { Component, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\n\nvar fErmatFactorization = function fErmatFactorization(number) {\n  if (number <= 0 || !Number.isInteger(number)) {\n    return;\n  }\n\n  ;\n\n  if (number % 2 === 0) {\n    return [number / 2, 2];\n  }\n\n  ;\n  var a = Math.ceil(Math.sqrt(number));\n\n  if (Math.pow(a, 2) === number) {\n    return [a, a];\n  }\n\n  ;\n  var b;\n\n  while (true) {\n    var b1 = Math.pow(a, 2) - number;\n    b = Math.sqrt(b1) | 0;\n\n    if (Math.pow(b, 2) === b1) {\n      break;\n    } else {\n      a++;\n    }\n\n    ;\n  }\n\n  ;\n  return [a - b, a + b];\n};\n\nvar P = 4;\nvar POINTS = [{\n  x1: 0,\n  x2: 6,\n  highLowRule: +1\n}, {\n  x1: 1,\n  x2: 5,\n  highLowRule: +1\n}, {\n  x1: 3,\n  x2: 3,\n  highLowRule: -1\n}, {\n  x1: 2,\n  x2: 4,\n  highLowRule: -1\n}];\nvar accuracy = 5;\n\nvar outputSignal = function outputSignal(point, w1, w2) {\n  return +(point.x1 * w1 + point.x2 * w2).toFixed(accuracy);\n};\n\nvar highLowCheck = function highLowCheck(point, y, P) {\n  if (point.highLowRule === +1) {\n    return y > P;\n  } else if (point.highLowRule === -1) {\n    return y < P;\n  }\n\n  ;\n};\n\nvar w = function w(_w, deltaRule, x, learningSpeed) {\n  return +(_w + deltaRule * x * learningSpeed).toFixed(accuracy);\n};\n\nvar outputSignalCheck = function outputSignalCheck(points, w1, w2) {\n  var successCounter = 0;\n\n  for (var _iterator = points, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var _point = _ref;\n    highLowCheck(_point, outputSignal(_point, w1, w2), P) && successCounter++;\n  }\n\n  ;\n  return successCounter === POINTS.length;\n};\n\nvar perceptronTraining = function perceptronTraining(P, accuracy, learningSpeed, deadlines) {\n  var paramW1 = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n  var paramW2 = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n  var turn = 0;\n  var w1 = paramW1,\n      w2 = paramW2;\n  var deltaRule = 0;\n  var iretationCounter = 0;\n  var performanceStart = performance.now();\n  var performanceEnd;\n\n  while (true) {\n    var point = POINTS[turn];\n    var y = outputSignal(point, w1, w2);\n\n    if (highLowCheck(point, y, P) && outputSignalCheck(POINTS, w1, w2)) {\n      break;\n    }\n\n    ;\n    deltaRule = +(P - y).toFixed(accuracy);\n    w1 = w(w1, deltaRule, point.x1, learningSpeed);\n    w2 = w(w2, deltaRule, point.x2, learningSpeed);\n    turn === POINTS.length - 1 ? turn = 0 : turn++;\n    iretationCounter++;\n\n    if (deadlines.temporal.isUsed) {\n      performanceEnd = performance.now();\n\n      if (performance.now() - performanceStart >= deadlines.temporal.seconds * 1000) {\n        break;\n      }\n\n      ;\n    }\n\n    ;\n\n    if (deadlines.iterative.isUsed) {\n      if (iretationCounter >= deadlines.iterative.iterations) {\n        break;\n      }\n\n      ;\n    }\n\n    ;\n  }\n\n  ;\n  performanceEnd = performance.now();\n  var perceptronPerformanceTime = performanceEnd - performanceStart || 0;\n  return [w1, w2, perceptronPerformanceTime, iretationCounter];\n};\n\nexport default function App() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      factorizedNumber = _useState2[0],\n      setFactorizedNumber = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      factorizedNumberAnswer = _useState4[0],\n      setFactorizedNumberAnswer = _useState4[1];\n\n  var _useState5 = useState(.001),\n      _useState6 = _slicedToArray(_useState5, 2),\n      learningSpeed = _useState6[0],\n      setLearningSpeed = _useState6[1];\n\n  var _useState7 = useState(.05),\n      _useState8 = _slicedToArray(_useState7, 2),\n      temporalDeadline = _useState8[0],\n      setTemporalDeadline = _useState8[1];\n\n  var _useState9 = useState(100),\n      _useState10 = _slicedToArray(_useState9, 2),\n      iterativeDeadline = _useState10[0],\n      setIterativeDeadline = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      perceptronTrainingAnswer = _useState12[0],\n      setPerceptronTrainingAnswer = _useState12[1];\n\n  var deadlines = {\n    temporal: {\n      isUsed: temporalDeadline > 0,\n      seconds: temporalDeadline\n    },\n    iterative: {\n      isUsed: iterativeDeadline > 0,\n      iterations: iterativeDeadline\n    }\n  };\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    }\n  }, \"Fermat's Factorization Method\"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    }\n  }, \"A  *  B  =  \" + (factorizedNumber || '')), React.createElement(TextInput, {\n    placeholder: \"Set Number\",\n    keyboardType: \"number-pad\",\n    onChangeText: function onChangeText(text) {\n      return setFactorizedNumber(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    }\n  }), React.createElement(Button, {\n    title: \"Number Factorization\",\n    onPress: function onPress() {\n      return setFactorizedNumberAnswer(fErmatFactorization(+factorizedNumber));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    }\n  }), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    }\n  }, factorizedNumberAnswer && \"A  =  \" + factorizedNumberAnswer[0] + \"  &  B  =  \" + factorizedNumberAnswer[1]), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    }\n  }, \"Perceptron Model\"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    }\n  }, \"Trigger Threshold: P = 4\"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    }\n  }, \"Points: +A(0, 6), +B(1, 5), -C(3, 3) And -D(2, 4)\"), React.createElement(TextInput, {\n    placeholder: \"Learning Speed (0.001 by default)\",\n    keyboardType: \"number-pad\",\n    onChangeText: function onChangeText(text) {\n      return setLearningSpeed(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Temporal Deadline, seconds (0.5s by default)\",\n    keyboardType: \"number-pad\",\n    onChangeText: function onChangeText(text) {\n      return setTemporalDeadline(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Iterative Deadline (100 by default)\",\n    keyboardType: \"number-pad\",\n    onChangeText: function onChangeText(text) {\n      return setIterativeDeadline(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    }\n  }), React.createElement(Button, {\n    title: \"Train Perceptron\",\n    onPress: function onPress() {\n      return setPerceptronTrainingAnswer(perceptronTraining(P, 5, learningSpeed, deadlines));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    }\n  }), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    }\n  }, perceptronTrainingAnswer && \"W1  =  \" + perceptronTrainingAnswer[0] + \"  &  W2  =  \" + perceptronTrainingAnswer[1]), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    }\n  }, perceptronTrainingAnswer && \"Time spent:  \" + perceptronTrainingAnswer[2].toFixed(5) + \" ms\"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    }\n  }, perceptronTrainingAnswer && \"Iterations: \" + perceptronTrainingAnswer[3]), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    }\n  }, perceptronTrainingAnswer && 'Checkup:'), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    }\n  }));\n}\n;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF'\n  }\n});","map":{"version":3,"sources":["C:/Users/Aspire/projects/studyAll/RTS/3/AwesomeProject/App.js"],"names":["React","Component","useState","fErmatFactorization","number","Number","isInteger","a","Math","ceil","sqrt","b","b1","P","POINTS","x1","x2","highLowRule","accuracy","outputSignal","point","w1","w2","toFixed","highLowCheck","y","w","deltaRule","x","learningSpeed","outputSignalCheck","points","successCounter","length","perceptronTraining","deadlines","paramW1","paramW2","turn","iretationCounter","performanceStart","performance","now","performanceEnd","temporal","isUsed","seconds","iterative","iterations","perceptronPerformanceTime","App","factorizedNumber","setFactorizedNumber","factorizedNumberAnswer","setFactorizedNumberAnswer","setLearningSpeed","temporalDeadline","setTemporalDeadline","iterativeDeadline","setIterativeDeadline","perceptronTrainingAnswer","setPerceptronTrainingAnswer","text","styles","StyleSheet","create","container","flex","justifyContent","alignItems","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport { StyleSheet, Text, View, Button, Alert, TextInput } from 'react-native';\n\n\n\n\n\n\nconst fErmatFactorization = number => {\n    \n  if ((number <= 0) || !(Number.isInteger(number))) {\n      return;\n  };\n  \n  if ((number % 2) === 0) {\n      return [number / 2, 2];\n  };\n  \n  let a = Math.ceil(Math.sqrt(number));\n  \n  if (a**2 === number) {\n      return [a, a];\n  };\n  \n  let b;\n  \n  while (true) {\n      let b1 = a**2 - number;\n      \n      b = Math.sqrt(b1) | 0;\n      \n      if (b**2 === b1) {\n          break;\n      } else {\n          a++;\n      };\n  };\n  \n  return [a - b, a + b];\n};\n\nconst P = 4;\n\nconst POINTS = [\n    {x1: 0, x2: 6, highLowRule: +1},\n    {x1: 1, x2: 5, highLowRule: +1},\n    {x1: 3, x2: 3, highLowRule: -1},\n    {x1: 2, x2: 4, highLowRule: -1}\n];\n\nconst accuracy = 5;\n\nconst outputSignal = (point, w1, w2) => +(point.x1 * w1 + point.x2 * w2).toFixed(accuracy);\n\nconst highLowCheck = (point, y, P) => {\n    if (point.highLowRule === +1) {\n        return y > P;\n    } else if (point.highLowRule === -1) {\n        return y < P;\n    };\n};\n\nconst w = (w, deltaRule, x, learningSpeed) => +(w + deltaRule * x * learningSpeed).toFixed(accuracy);\n\nconst outputSignalCheck = (points, w1, w2) => {\n    let successCounter = 0;\n    for (const point of points) {\n        highLowCheck(point, outputSignal(point, w1, w2), P) && successCounter++;\n    };\n    return successCounter === POINTS.length;\n};\n\nconst perceptronTraining = (P, accuracy, learningSpeed, deadlines, paramW1 = 0, paramW2 = 0) => {\n    let turn = 0;\n    let w1 = paramW1, w2 = paramW2;\n    let deltaRule = 0;\n    let iretationCounter = 0;\n    const performanceStart = performance.now();\n    let performanceEnd;\n    while (true) {\n        const point = POINTS[turn];\n        const y = outputSignal(point, w1, w2);\n        if (highLowCheck(point, y, P) && outputSignalCheck(POINTS, w1, w2)) {\n            break;\n        };\n        deltaRule = +(P - y).toFixed(accuracy);\n        w1 = w(w1, deltaRule, point.x1, learningSpeed);\n        w2 = w(w2, deltaRule, point.x2, learningSpeed);\n        (turn === POINTS.length - 1) ? turn = 0 : turn++;\n        iretationCounter++;\n        if (deadlines.temporal.isUsed) {\n            performanceEnd = performance.now();\n            if ((performance.now() - performanceStart) >= (deadlines.temporal.seconds * 1000)) {\n                break;\n            };\n        };\n        if (deadlines.iterative.isUsed) {\n            if (iretationCounter >= deadlines.iterative.iterations) {\n                break;\n            };\n        };\n    };\n    performanceEnd = performance.now();\n    const perceptronPerformanceTime = performanceEnd - performanceStart || 0;\n    return [w1, w2, perceptronPerformanceTime, iretationCounter];\n};\n\nexport default function App() {\n  const [factorizedNumber, setFactorizedNumber] = useState('');\n  const [factorizedNumberAnswer, setFactorizedNumberAnswer] = useState('');\n  const [learningSpeed, setLearningSpeed] = useState(.001);\n  const [temporalDeadline, setTemporalDeadline] = useState(.05);\n  const [iterativeDeadline, setIterativeDeadline] = useState(100);\n  const [perceptronTrainingAnswer, setPerceptronTrainingAnswer] = useState(null);\n  const deadlines = {\n    temporal: {isUsed: temporalDeadline > 0, seconds: temporalDeadline},\n    iterative: {isUsed: iterativeDeadline > 0, iterations: iterativeDeadline}\n  };\n  return (\n    <View>\n      <Text>Fermat's Factorization Method</Text>\n      <Text>{`A  *  B  =  ${factorizedNumber || ''}`}</Text>\n      <TextInput placeholder=\"Set Number\" keyboardType=\"number-pad\" onChangeText={text => setFactorizedNumber(text)}></TextInput>\n      <Button title=\"Number Factorization\" onPress={() => setFactorizedNumberAnswer(fErmatFactorization(+factorizedNumber))}></Button>\n      <Text>{factorizedNumberAnswer && `A  =  ${factorizedNumberAnswer[0]}  &  B  =  ${factorizedNumberAnswer[1]}`}</Text>\n      <Text>Perceptron Model</Text>\n      <Text>Trigger Threshold: P = 4</Text>\n      <Text>Points: +A(0, 6), +B(1, 5), -C(3, 3) And -D(2, 4)</Text>\n      <TextInput placeholder=\"Learning Speed (0.001 by default)\" keyboardType=\"number-pad\" onChangeText={text => setLearningSpeed(text)}></TextInput>\n      <TextInput placeholder=\"Temporal Deadline, seconds (0.5s by default)\" keyboardType=\"number-pad\" onChangeText={text => setTemporalDeadline(text)}></TextInput>\n      <TextInput placeholder=\"Iterative Deadline (100 by default)\" keyboardType=\"number-pad\" onChangeText={text => setIterativeDeadline(text)}></TextInput>\n      <Button title=\"Train Perceptron\" onPress={() => setPerceptronTrainingAnswer(perceptronTraining(P, 5, learningSpeed, deadlines))}></Button>\n      <Text>{perceptronTrainingAnswer && `W1  =  ${perceptronTrainingAnswer[0]}  &  W2  =  ${perceptronTrainingAnswer[1]}`}</Text>\n      <Text>{perceptronTrainingAnswer && `Time spent:  ${perceptronTrainingAnswer[2].toFixed(5)} ms`}</Text>\n      <Text>{perceptronTrainingAnswer && `Iterations: ${perceptronTrainingAnswer[3]}`}</Text>\n      <Text>{perceptronTrainingAnswer && 'Checkup:'}</Text>\n      <Text></Text>\n    </View>\n  );\n};\n\n\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF',\n  }\n});\n"]},"metadata":{},"sourceType":"module"}