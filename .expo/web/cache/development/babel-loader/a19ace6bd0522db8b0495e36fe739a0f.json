{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Aspire\\\\projects\\\\studyAll\\\\RTS\\\\3\\\\AwesomeProject\\\\App.js\";\nimport React, { Component, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\n\nvar fErmatFactorization = function fErmatFactorization(number) {\n  if (number <= 0 || !Number.isInteger(number)) {\n    return;\n  }\n\n  ;\n\n  if (number % 2 === 0) {\n    return [number / 2, 2];\n  }\n\n  ;\n  var a = Math.ceil(Math.sqrt(number));\n\n  if (Math.pow(a, 2) === number) {\n    return [a, a];\n  }\n\n  ;\n  var b;\n\n  while (true) {\n    var b1 = Math.pow(a, 2) - number;\n    b = Math.sqrt(b1) | 0;\n\n    if (Math.pow(b, 2) === b1) {\n      break;\n    } else {\n      a++;\n    }\n\n    ;\n  }\n\n  ;\n  return [a - b, a + b];\n};\n\nexport default function App() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      factorizedNumber = _useState2[0],\n      setFactorizedNumber = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      factorizedNumberAnswer = _useState4[0],\n      setFactorizedNumberAnswer = _useState4[1];\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    }\n  }, \"Fermat's Factorization Method\"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    }\n  }, \"A  *  B  =  \" + (factorizedNumber || '')), React.createElement(TextInput, {\n    placeholder: \"Set Number\",\n    onChangeText: function onChangeText(text) {\n      return setFactorizedNumber(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    }\n  }), React.createElement(Button, {\n    title: \"Number Factorization\",\n    onPress: function onPress() {\n      return setFactorizedNumberAnswer(fErmatFactorization(+factorizedNumber));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    }\n  }), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    }\n  }, factorizedNumberAnswer && \"A  =  \" + factorizedNumberAnswer[0] + \";  B  =  \" + factorizedNumberAnswer[1]));\n}\n;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF'\n  }\n});","map":{"version":3,"sources":["C:/Users/Aspire/projects/studyAll/RTS/3/AwesomeProject/App.js"],"names":["React","Component","useState","fErmatFactorization","number","Number","isInteger","a","Math","ceil","sqrt","b","b1","App","factorizedNumber","setFactorizedNumber","factorizedNumberAnswer","setFactorizedNumberAnswer","text","styles","StyleSheet","create","container","flex","justifyContent","alignItems","backgroundColor"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;;;AAGA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAC,MAAM,EAAI;AAEpC,MAAKA,MAAM,IAAI,CAAX,IAAiB,CAAEC,MAAM,CAACC,SAAP,CAAiBF,MAAjB,CAAvB,EAAkD;AAC9C;AACH;;AAAA;;AAED,MAAKA,MAAM,GAAG,CAAV,KAAiB,CAArB,EAAwB;AACpB,WAAO,CAACA,MAAM,GAAG,CAAV,EAAa,CAAb,CAAP;AACH;;AAAA;AAED,MAAIG,CAAC,GAAGC,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,IAAL,CAAUN,MAAV,CAAV,CAAR;;AAEA,MAAI,SAAAG,CAAC,EAAE,CAAF,CAAD,KAASH,MAAb,EAAqB;AACjB,WAAO,CAACG,CAAD,EAAIA,CAAJ,CAAP;AACH;;AAAA;AAED,MAAII,CAAJ;;AAEA,SAAO,IAAP,EAAa;AACT,QAAIC,EAAE,GAAG,SAAAL,CAAC,EAAE,CAAF,CAAD,GAAOH,MAAhB;AAEAO,IAAAA,CAAC,GAAGH,IAAI,CAACE,IAAL,CAAUE,EAAV,IAAgB,CAApB;;AAEA,QAAI,SAAAD,CAAC,EAAE,CAAF,CAAD,KAASC,EAAb,EAAiB;AACb;AACH,KAFD,MAEO;AACHL,MAAAA,CAAC;AACJ;;AAAA;AACJ;;AAAA;AAED,SAAO,CAACA,CAAC,GAAGI,CAAL,EAAQJ,CAAC,GAAGI,CAAZ,CAAP;AACD,CA/BD;;AAiCA,eAAe,SAASE,GAAT,GAAe;AAAA,kBACoBX,QAAQ,CAAC,EAAD,CAD5B;AAAA;AAAA,MACrBY,gBADqB;AAAA,MACHC,mBADG;;AAAA,mBAEgCb,QAAQ,CAAC,EAAD,CAFxC;AAAA;AAAA,MAErBc,sBAFqB;AAAA,MAEGC,yBAFH;;AAG5B,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,qCADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAsBH,gBAAgB,IAAI,EAA1C,EAFF,EAGE,oBAAC,SAAD;AAAW,IAAA,WAAW,EAAC,YAAvB;AAAoC,IAAA,YAAY,EAAE,sBAAAI,IAAI;AAAA,aAAIH,mBAAmB,CAACG,IAAD,CAAvB;AAAA,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,sBAAd;AAAqC,IAAA,OAAO,EAAE;AAAA,aAAMD,yBAAyB,CAACd,mBAAmB,CAAC,CAACW,gBAAF,CAApB,CAA/B;AAAA,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOE,sBAAsB,eAAaA,sBAAsB,CAAC,CAAD,CAAnC,iBAAkDA,sBAAsB,CAAC,CAAD,CAArG,CALF,CADF;AASD;AAAA;AAKD,IAAMG,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,cAAc,EAAE,QAFP;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,eAAe,EAAE;AAJR;AADoB,CAAlB,CAAf","sourcesContent":["import React, { Component, useState } from 'react';\nimport { StyleSheet, Text, View, Button, Alert, TextInput } from 'react-native';\n\nconst fErmatFactorization = number => {\n    \n  if ((number <= 0) || !(Number.isInteger(number))) {\n      return;\n  };\n  \n  if ((number % 2) === 0) {\n      return [number / 2, 2];\n  };\n  \n  let a = Math.ceil(Math.sqrt(number));\n  \n  if (a**2 === number) {\n      return [a, a];\n  };\n  \n  let b;\n  \n  while (true) {\n      let b1 = a**2 - number;\n      \n      b = Math.sqrt(b1) | 0;\n      \n      if (b**2 === b1) {\n          break;\n      } else {\n          a++;\n      };\n  };\n  \n  return [a - b, a + b];\n};\n\nexport default function App() {\n  const [factorizedNumber, setFactorizedNumber] = useState('');\n  const [factorizedNumberAnswer, setFactorizedNumberAnswer] = useState('');\n  return (\n    <View>\n      <Text>Fermat's Factorization Method</Text>\n      <Text>{`A  *  B  =  ${factorizedNumber || ''}`}</Text>\n      <TextInput placeholder=\"Set Number\" onChangeText={text => setFactorizedNumber(text)}></TextInput>\n      <Button title=\"Number Factorization\" onPress={() => setFactorizedNumberAnswer(fErmatFactorization(+factorizedNumber))}></Button>\n      <Text>{factorizedNumberAnswer && `A  =  ${factorizedNumberAnswer[0]};  B  =  ${factorizedNumberAnswer[1]}`}</Text>\n    </View>\n  );\n};\n\n\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF',\n  }\n});\n"]},"metadata":{},"sourceType":"module"}